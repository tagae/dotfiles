#!/bin/bash

source ~/.dotfiles/bin/lib/dotfiles.sh
source ~/.dotfiles/bin/lib/files.sh

cd ~

info "=> Checking dotfiles-update git configuration..."

pushd ~/.dotfiles/.git/hooks > /dev/null
for hook in post-merge post-commit; do
    if [ ! -r "$hook" ]; then
        info "Setting dotfiles-update as git '$hook' hook"
        ln -s ../../bin/dotfiles-update "$hook"
    fi
done
popd > /dev/null

info "=> Removing dangling links pointing to .dotfiles..."

for danglingLink in \
        $(find -L . -maxdepth 1 -type l -print) \
        $(find -L .dotfiles -type l -print); do
    if [[ $(readlink "$danglingLink") =~ ^\.dotfiles/ ]]; then
        rmlink "$danglingLink"
    fi
done

for danglingLink in $(find -L .dotfiles -type l -print); do
    rmlink "$danglingLink"
done

info "=> Symlinking .dotfiles to home directory..."

OS=$(uname)

function linkDotfiles {
    fromDir=$1
    toDir=$2
    [ "$(realdir "$toDir")" = "$HOME" ] && dot=.
    find "$fromDir" -maxdepth 1 \
        -not -name ".*" \
        -not -name "README*" \
        \( -name "*($OS)" -o -name "*[!()]" \) -print | \
        while read source; do
            target=$dot$(basename "$source" | sed "s/[[:space:]]*($OS)//")
            if [ ! -e "$target" ]; then
                symlink "$source" "$target"
            elif [[ ! $(readlink "$target") =~ ^\.dotfiles/ ]]; then
                [[ $target =~ ^\.(.+) ]] && fromDir=$fromDir/${BASH_REMATCH[1]}
                if [ -d "$fromDir" -a -d "$target" ]; then
                    echo "[TODO: recursively link files]"
                    echo linkDotfiles "$fromDir" "$target"
                else
                    warning -c "Leaving existing '$target' unchanged"
                fi
            fi
        done
}

linkDotfiles .dotfiles .

info "=> Symlinking platform-specific dotfiles..."

find .dotfiles -mindepth 2 -name "*($OS)" | \
while read source; do
    dir=$(dirname "$source")
    file=$(basename "$source")
    target=$(echo "$file" | sed "s/[[:space:]]*($OS)//")
    if [ ! -e "$dir/$target" ]; then
        pushd "$dir" > /dev/null
        symlink "$file" "$target" "${dir#.*/}/"
        popd > /dev/null
    fi
done

info "=> Running custom updates..."

dotfilesUpdateLocal=~/.dotfiles/bin/dotfiles-update.d

if [ -d "$dotfilesUpdateLocal" ]; then
    cd "$dotfilesUpdateLocal"
    for dotfileUpdate in *; do
        ./$dotfileUpdate
    done
fi
